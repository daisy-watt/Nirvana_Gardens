"use strict";

exports.__esModule = true;
exports.default = useWordcloud;

var _react = _interopRequireWildcard(require("react"));

var _d3Cloud = _interopRequireDefault(require("d3-cloud"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function useWordcloud(_ref) {
  var width = _ref.width,
      height = _ref.height,
      font = _ref.font,
      fontSize = _ref.fontSize,
      fontStyle = _ref.fontStyle,
      fontWeight = _ref.fontWeight,
      padding = _ref.padding,
      random = _ref.random,
      rotate = _ref.rotate,
      spiral = _ref.spiral,
      words = _ref.words;

  var _useState = (0, _react.useState)([]),
      cloudWords = _useState[0],
      setCloudWords = _useState[1];

  (0, _react.useEffect)(function () {
    if (width === 0 || height === 0) {
      return;
    }

    var layout = (0, _d3Cloud.default)();
    layout.size([width, height]);
    layout.words(words);
    if (typeof random !== 'undefined') layout.random(random);
    if (typeof font !== 'undefined') layout.font(font);
    if (typeof padding !== 'undefined') layout.padding(padding);
    if (typeof fontSize !== 'undefined') layout.fontSize(fontSize);
    if (typeof fontStyle !== 'undefined') layout.fontStyle(fontStyle);
    if (typeof fontWeight !== 'undefined') layout.fontWeight(fontWeight);
    if (typeof rotate !== 'undefined') layout.rotate(rotate);
    if (typeof spiral !== 'undefined') layout.spiral(spiral);
    layout.on('end', setCloudWords);
    layout.start();
    return function cleanup() {
      layout.stop();
    };
  }, [width, height, font, fontSize, fontStyle, fontWeight, padding, random, rotate, spiral, words]);
  return cloudWords;
}